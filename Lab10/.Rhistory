file <- readline()
rocket.data <- read.xlsx(file)
names(rocket.data) <- c("seconds", "distance")
xVec <- as.vector(rocket.data$seconds)
yVec <- as.vector(rocket.data$distance)
# Plot data
plot(xVec, yVec, xlim=c(0, 450), ylim=c(0, 200), type="l", col="red", xlab="Time", ylab="Distance", main="Distance Travelled by Rocket")
par(new=TRUE)
# Calc Velocity
newTime <- xVec[2:(length(xVec)-1)]
velocity <- firstDev(xVec, yVec)
plot(newTime, velocity/1000, xlim=c(0, 450), ylim=c(0, 200), type="l", col="blue", xlab="", ylab="", xaxt="n", yaxt="n")
par(new=TRUE)
# Calc Acceleration
acceleration <- secondDev(xVec, yVec)
plot(newTime, acceleration/1000, xlim=c(0, 450), ylim=c(0, 200), type="l", col="green", xlab="", ylab="", xaxt="n", yaxt="n")
}
main()
# Library Files
library("openxlsx")
# Functions
firstDev <- function(xVec, yVec) {
n <- length(xVec)
first.dev <- c()
# Range must be +1 from start and -1 from end for CDD
for(i in 2:(n-1)) {
first.dev[length(first.dev) + 1] <- ((yVec[(i+1)] - yVec[(i-1)])/(xVec[(i+1)] - xVec[(i-1)]))
}
return (first.dev)
}
secondDev <- function(xVec, yVec) {
n <- length(xVec)
second.dev <- c()
# Range must be +1 from start and -1 from end for second derivative
for(i in 2:(n-1)) {
second.dev[length(second.dev) + 1] <- ((yVec[(i+1)] - 2*yVec[i] + yVec[(i-1)])/((xVec[(i+1)] - xVec[i])^2))
}
return (second.dev)
}
main <- function() {
setwd("/home/neil/devel/school/2021_Fall/Numerical_Computing_Term4/Lab10/")
# Import CSV File
print("Please enter the name of the file to open:")
file <- readline()
rocket.data <- read.xlsx(file)
names(rocket.data) <- c("seconds", "distance")
xVec <- as.vector(rocket.data$seconds)
yVec <- as.vector(rocket.data$distance)
# Plot data
plot(xVec, yVec, xlim=c(0, 450), ylim=c(0, 200), type="l", col="red", xlab="Time", ylab="Distance", main="Distance Travelled by Rocket")
par(new=TRUE)
# Calc Velocity
newTime <- xVec[2:(length(xVec)-1)]
velocity <- firstDev(xVec, yVec)
plot(newTime, velocity*1000, xlim=c(0, 450), ylim=c(0, 200), type="l", col="blue", xlab="", ylab="", xaxt="n", yaxt="n")
par(new=TRUE)
# Calc Acceleration
acceleration <- secondDev(xVec, yVec)
plot(newTime, acceleration*1000, xlim=c(0, 450), ylim=c(0, 200), type="l", col="green", xlab="", ylab="", xaxt="n", yaxt="n")
}
main()
# Library Files
library("openxlsx")
# Functions
firstDev <- function(xVec, yVec) {
n <- length(xVec)
first.dev <- c()
# Range must be +1 from start and -1 from end for CDD
for(i in 2:(n-1)) {
first.dev[length(first.dev) + 1] <- ((yVec[(i+1)] - yVec[(i-1)])/(xVec[(i+1)] - xVec[(i-1)]))
}
return (first.dev)
}
secondDev <- function(xVec, yVec) {
n <- length(xVec)
second.dev <- c()
# Range must be +1 from start and -1 from end for second derivative
for(i in 2:(n-1)) {
second.dev[length(second.dev) + 1] <- ((yVec[(i+1)] - 2*yVec[i] + yVec[(i-1)])/((xVec[(i+1)] - xVec[i])^2))
}
return (second.dev)
}
main <- function() {
setwd("/home/neil/devel/school/2021_Fall/Numerical_Computing_Term4/Lab10/")
# Import CSV File
print("Please enter the name of the file to open:")
file <- readline()
rocket.data <- read.xlsx(file)
names(rocket.data) <- c("seconds", "distance")
xVec <- as.vector(rocket.data$seconds)
yVec <- as.vector(rocket.data$distance)
# Plot data
plot(xVec, yVec, xlim=c(0, 450), ylim=c(0, 200), type="l", col="red", xlab="Time", ylab="Distance", main="Distance Travelled by Rocket")
par(new=TRUE)
# Calc Velocity
newTime <- xVec[2:(length(xVec)-1)]
velocity <- firstDev(xVec, yVec)
plot(newTime, velocity/1000, xlim=c(0, 450), ylim=c(0, 200), type="l", col="blue", xlab="", ylab="", xaxt="n", yaxt="n")
par(new=TRUE)
# Calc Acceleration
acceleration <- secondDev(xVec, yVec)
plot(newTime, acceleration/1000, xlim=c(0, 450), ylim=c(0, 200), type="l", col="green", xlab="", ylab="", xaxt="n", yaxt="n")
}
main()
# Library Files
library("openxlsx")
# Functions
firstDev <- function(xVec, yVec) {
n <- length(xVec)
first.dev <- c()
# Range must be +1 from start and -1 from end for CDD
for(i in 2:(n-1)) {
first.dev[length(first.dev) + 1] <- ((yVec[(i+1)] - yVec[(i-1)])/(xVec[(i+1)] - xVec[(i-1)]))
}
return (first.dev)
}
secondDev <- function(xVec, yVec) {
n <- length(xVec)
second.dev <- c()
# Range must be +1 from start and -1 from end for second derivative
for(i in 2:(n-1)) {
second.dev[length(second.dev) + 1] <- ((yVec[(i+1)] - 2*yVec[i] + yVec[(i-1)])/((xVec[(i+1)] - xVec[i])^2))
}
return (second.dev)
}
main <- function() {
setwd("/home/neil/devel/school/2021_Fall/Numerical_Computing_Term4/Lab10/")
# Import CSV File
print("Please enter the name of the file to open:")
file <- readline()
rocket.data <- read.xlsx(file)
names(rocket.data) <- c("seconds", "distance")
xVec <- as.vector(rocket.data$seconds)
yVec <- as.vector(rocket.data$distance)
# Plot data
#plot(xVec, yVec, xlim=c(0, 450), ylim=c(0, 200), type="l", col="red", xlab="Time", ylab="Distance", main="Distance Travelled by Rocket")
plot(xVec, yVec, type="l", col="red", xlab="Time", ylab="Distance", main="Distance Travelled by Rocket")
par(new=TRUE)
# Calc Velocity
newTime <- xVec[2:(length(xVec)-1)]
velocity <- firstDev(xVec, yVec)
#plot(newTime, velocity, xlim=c(0, 450), ylim=c(0, 200), type="l", col="blue", xlab="", ylab="", xaxt="n", yaxt="n")
plot(newTime, velocity, type="l", col="blue", xlab="", ylab="", xaxt="n", yaxt="n")
par(new=TRUE)
# Calc Acceleration
acceleration <- secondDev(xVec, yVec)
#plot(newTime, acceleration, xlim=c(0, 450), ylim=c(0, 200), type="l", col="green", xlab="", ylab="", xaxt="n", yaxt="n")
plot(newTime, acceleration, type="l", col="green", xlab="", ylab="", xaxt="n", yaxt="n")
}
main()
# Library Files
library("openxlsx")
# Functions
firstDev <- function(xVec, yVec) {
n <- length(xVec)
first.dev <- c()
# Range must be +1 from start and -1 from end for CDD
for(i in 2:(n-1)) {
first.dev[length(first.dev) + 1] <- ((yVec[(i+1)] - yVec[(i-1)])/(xVec[(i+1)] - xVec[(i-1)]))
}
return (first.dev)
}
secondDev <- function(xVec, yVec) {
n <- length(xVec)
second.dev <- c()
# Range must be +1 from start and -1 from end for second derivative
for(i in 2:(n-1)) {
second.dev[length(second.dev) + 1] <- ((yVec[(i+1)] - 2*yVec[i] + yVec[(i-1)])/((xVec[(i+1)] - xVec[i])^2))
}
return (second.dev)
}
main <- function() {
setwd("/home/neil/devel/school/2021_Fall/Numerical_Computing_Term4/Lab10/")
# Import CSV File
print("Please enter the name of the file to open:")
file <- readline()
rocket.data <- read.xlsx(file)
names(rocket.data) <- c("seconds", "distance")
xVec <- as.vector(rocket.data$seconds)
yVec <- as.vector(rocket.data$distance)
# Plot data
#plot(xVec, yVec, xlim=c(0, 450), ylim=c(0, 200), type="l", col="red", xlab="Time", ylab="Distance", main="Distance Travelled by Rocket")
plot(xVec, yVec, type="l", xlim=c(0, 450), col="red", xlab="Time", ylab="Distance", main="Distance Travelled by Rocket")
par(new=TRUE)
# Calc Velocity
newTime <- xVec[2:(length(xVec)-1)]
velocity <- firstDev(xVec, yVec)
#plot(newTime, velocity, xlim=c(0, 450), ylim=c(0, 200), type="l", col="blue", xlab="", ylab="", xaxt="n", yaxt="n")
plot(newTime, velocity, xlim=c(0, 450), type="l", col="blue", xlab="", ylab="", xaxt="n", yaxt="n")
par(new=TRUE)
# Calc Acceleration
acceleration <- secondDev(xVec, yVec)
#plot(newTime, acceleration, xlim=c(0, 450), ylim=c(0, 200), type="l", col="green", xlab="", ylab="", xaxt="n", yaxt="n")
plot(newTime, acceleration, xlim=c(0, 450), type="l", col="green", xlab="", ylab="", xaxt="n", yaxt="n")
}
main()
# Library Files
library("openxlsx")
# Functions
firstDev <- function(xVec, yVec) {
n <- length(xVec)
first.dev <- c()
# Range must be +1 from start and -1 from end for CDD
for(i in 2:(n-1)) {
first.dev[length(first.dev) + 1] <- ((yVec[(i+1)] - yVec[(i-1)])/(xVec[(i+1)] - xVec[(i-1)]))
}
return (first.dev)
}
secondDev <- function(xVec, yVec) {
n <- length(xVec)
second.dev <- c()
# Range must be +1 from start and -1 from end for second derivative
for(i in 2:(n-1)) {
second.dev[length(second.dev) + 1] <- ((yVec[(i+1)] - 2*yVec[i] + yVec[(i-1)])/((xVec[(i+1)] - xVec[i])^2))
}
return (second.dev)
}
main <- function() {
setwd("/home/neil/devel/school/2021_Fall/Numerical_Computing_Term4/Lab10/")
# Import CSV File
print("Please enter the name of the file to open:")
file <- readline()
rocket.data <- read.xlsx(file)
names(rocket.data) <- c("seconds", "distance")
xVec <- as.vector(rocket.data$seconds)
yVec <- as.vector(rocket.data$distance)
# Plot data
#plot(xVec, yVec, xlim=c(0, 450), ylim=c(0, 200), type="l", col="red", xlab="Time", ylab="Distance", main="Distance Travelled by Rocket")
plot(xVec, yVec, type="l", xlim=c(0, 450), col="red", xlab="Time", ylab="Distance", main="Distance Travelled by Rocket")
#par(new=TRUE)
# Calc Velocity
newTime <- xVec[2:(length(xVec)-1)]
velocity <- firstDev(xVec, yVec)
#plot(newTime, velocity, xlim=c(0, 450), ylim=c(0, 200), type="l", col="blue", xlab="", ylab="", xaxt="n", yaxt="n")
plot(newTime, velocity, xlim=c(0, 450), type="l", col="blue", xlab="", ylab="", xaxt="n", yaxt="n")
#par(new=TRUE)
# Calc Acceleration
acceleration <- secondDev(xVec, yVec)
#plot(newTime, acceleration, xlim=c(0, 450), ylim=c(0, 200), type="l", col="green", xlab="", ylab="", xaxt="n", yaxt="n")
plot(newTime, acceleration, xlim=c(0, 450), type="l", col="green", xlab="", ylab="", xaxt="n", yaxt="n")
}
main()
# Library Files
library("openxlsx")
# Functions
firstDev <- function(xVec, yVec) {
n <- length(xVec)
first.dev <- c()
# Range must be +1 from start and -1 from end for CDD
for(i in 2:(n-1)) {
first.dev[length(first.dev) + 1] <- ((yVec[(i+1)] - yVec[(i-1)])/(xVec[(i+1)] - xVec[(i-1)]))
}
return (first.dev)
}
secondDev <- function(xVec, yVec) {
n <- length(xVec)
second.dev <- c()
# Range must be +1 from start and -1 from end for second derivative
for(i in 2:(n-1)) {
second.dev[length(second.dev) + 1] <- ((yVec[(i+1)] - 2*yVec[i] + yVec[(i-1)])/((xVec[(i+1)] - xVec[i])^2))
}
return (second.dev)
}
#main <- function() {
setwd("/home/neil/devel/school/2021_Fall/Numerical_Computing_Term4/Lab10/")
print("Please enter the name of the file to open:")
file <- readline()
names(rocket.data) <- c("seconds", "distance")
xVec <- as.vector(rocket.data$seconds)
yVec <- as.vector(rocket.data$distance)
# Library Files
library("openxlsx")
# Functions
firstDev <- function(xVec, yVec) {
n <- length(xVec)
first.dev <- c()
# Range must be +1 from start and -1 from end for CDD
for(i in 2:(n-1)) {
first.dev[length(first.dev) + 1] <- ((yVec[(i+1)] - yVec[(i-1)])/(xVec[(i+1)] - xVec[(i-1)]))
}
return (first.dev)
}
secondDev <- function(xVec, yVec) {
n <- length(xVec)
second.dev <- c()
# Range must be +1 from start and -1 from end for second derivative
for(i in 2:(n-1)) {
second.dev[length(second.dev) + 1] <- ((yVec[(i+1)] - 2*yVec[i] + yVec[(i-1)])/((xVec[(i+1)] - xVec[i])^2))
}
return (second.dev)
}
#main <- function() {
setwd("/home/neil/devel/school/2021_Fall/Numerical_Computing_Term4/Lab10/")
print("Please enter the name of the file to open:")
file <- readline()
names(rocket.data) <- c("seconds", "distance")
# Library Files
library("openxlsx")
# Functions
firstDev <- function(xVec, yVec) {
n <- length(xVec)
first.dev <- c()
# Range must be +1 from start and -1 from end for CDD
for(i in 2:(n-1)) {
first.dev[length(first.dev) + 1] <- ((yVec[(i+1)] - yVec[(i-1)])/(xVec[(i+1)] - xVec[(i-1)]))
}
return (first.dev)
}
secondDev <- function(xVec, yVec) {
n <- length(xVec)
second.dev <- c()
# Range must be +1 from start and -1 from end for second derivative
for(i in 2:(n-1)) {
second.dev[length(second.dev) + 1] <- ((yVec[(i+1)] - 2*yVec[i] + yVec[(i-1)])/((xVec[(i+1)] - xVec[i])^2))
}
return (second.dev)
}
#main <- function() {
setwd("/home/neil/devel/school/2021_Fall/Numerical_Computing_Term4/Lab10/")
print("Please enter the name of the file to open:")
file <- readline()
rocket.data <- read.xlsx(file)
names(rocket.data) <- c("seconds", "distance")
xVec <- as.vector(rocket.data$seconds)
yVec <- as.vector(rocket.data$distance)
# Plot data
#plot(xVec, yVec, xlim=c(0, 450), ylim=c(0, 200), type="l", col="red", xlab="Time", ylab="Distance", main="Distance Travelled by Rocket")
plot(xVec, yVec, type="l", xlim=c(0, 450), col="red", xlab="Time", ylab="Distance", main="Distance Travelled by Rocket")
# Calc Velocity
newTime <- xVec[2:(length(xVec)-1)]
velocity <- firstDev(xVec, yVec)
#plot(newTime, velocity, xlim=c(0, 450), ylim=c(0, 200), type="l", col="blue", xlab="", ylab="", xaxt="n", yaxt="n")
plot(newTime, velocity, xlim=c(0, 450), type="l", col="blue", xlab="", ylab="", xaxt="n", yaxt="n")
# Calc Acceleration
acceleration <- secondDev(xVec, yVec)
#plot(newTime, acceleration, xlim=c(0, 450), ylim=c(0, 200), type="l", col="green", xlab="", ylab="", xaxt="n", yaxt="n")
plot(newTime, acceleration, xlim=c(0, 450), type="l", col="green", xlab="", ylab="", xaxt="n", yaxt="n")
# Library Files
library("openxlsx")
# Functions
firstDev <- function(xVec, yVec) {
n <- length(xVec)
first.dev <- c()
# Range must be +1 from start and -1 from end for CDD
for(i in 2:(n-1)) {
first.dev[length(first.dev) + 1] <- ((yVec[(i+1)] - yVec[(i-1)])/(xVec[(i+1)] - xVec[(i-1)]))
}
return (first.dev)
}
secondDev <- function(xVec, yVec) {
n <- length(xVec)
second.dev <- c()
# Range must be +1 from start and -1 from end for second derivative
for(i in 2:(n-1)) {
second.dev[length(second.dev) + 1] <- ((yVec[(i+1)] - 2*yVec[i] + yVec[(i-1)])/((xVec[(i+1)] - xVec[i])^2))
}
return (second.dev)
}
main <- function() {
setwd("/home/neil/devel/school/2021_Fall/Numerical_Computing_Term4/Lab10/")
# Import CSV File
print("Please enter the name of the file to open:")
file <- readline()
rocket.data <- read.xlsx(file)
names(rocket.data) <- c("seconds", "distance")
xVec <- as.vector(rocket.data$seconds)
yVec <- as.vector(rocket.data$distance)
# Plot data
#plot(xVec, yVec, xlim=c(0, 450), ylim=c(0, 200), type="l", col="red", xlab="Time", ylab="Distance", main="Distance Travelled by Rocket")
plot(xVec, yVec, type="l", xlim=c(0, 450), col="red", xlab="Time", ylab="Distance", main="Distance Travelled by Rocket")
#par(new=TRUE)
# Calc Velocity
newTime <- xVec[2:(length(xVec)-1)]
velocity <- firstDev(xVec, yVec)
#plot(newTime, velocity, xlim=c(0, 450), ylim=c(0, 200), type="l", col="blue", xlab="", ylab="", xaxt="n", yaxt="n")
plot(newTime, velocity, xlim=c(0, 450), type="l", col="blue", xlab="", ylab="", xaxt="n", yaxt="n")
#par(new=TRUE)
# Calc Acceleration
acceleration <- secondDev(xVec, yVec)
#plot(newTime, acceleration, xlim=c(0, 450), ylim=c(0, 200), type="l", col="green", xlab="", ylab="", xaxt="n", yaxt="n")
plot(newTime, acceleration, xlim=c(0, 450), type="l", col="green", xlab="", ylab="", xaxt="n", yaxt="n")
}
main()
# Library Files
library("openxlsx")
# Functions
firstDev <- function(xVec, yVec) {
n <- length(xVec)
first.dev <- c()
# Range must be +1 from start and -1 from end for CDD
for(i in 2:(n-1)) {
first.dev[length(first.dev) + 1] <- ((yVec[(i+1)] - yVec[(i-1)])/(xVec[(i+1)] - xVec[(i-1)]))
}
return (first.dev)
}
secondDev <- function(xVec, yVec) {
n <- length(xVec)
second.dev <- c()
# Range must be +1 from start and -1 from end for second derivative
for(i in 2:(n-1)) {
second.dev[length(second.dev) + 1] <- ((yVec[(i+1)] - 2*yVec[i] + yVec[(i-1)])/((xVec[(i+1)] - xVec[i])^2))
}
return (second.dev)
}
main <- function() {
setwd("/home/neil/devel/school/2021_Fall/Numerical_Computing_Term4/Lab10/")
# Import CSV File
print("Please enter the name of the file to open:")
file <- readline()
rocket.data <- read.xlsx(file)
names(rocket.data) <- c("seconds", "distance")
xVec <- as.vector(rocket.data$seconds)
yVec <- as.vector(rocket.data$distance)
# Plot data
plot(xVec, yVec, xlim=c(0, 450), ylim=c(0, 200), type="l", col="red", xlab="Time", ylab="Distance", main="Distance Travelled by Rocket")
par(new=TRUE)
# Calc Velocity
newTime <- xVec[2:(length(xVec)-1)]
velocity <- firstDev(xVec, yVec)
plot(newTime, velocity, xlim=c(0, 450), ylim=c(0, 200), type="l", col="blue", xlab="", ylab="", xaxt="n", yaxt="n")
par(new=TRUE)
# Calc Acceleration
acceleration <- secondDev(xVec, yVec)
plot(newTime, acceleration, xlim=c(0, 450), ylim=c(0, 200), type="l", col="green", xlab="", ylab="", xaxt="n", yaxt="n")
}
main()
# Library Files
library("openxlsx")
# Functions
firstDev <- function(xVec, yVec) {
n <- length(xVec)
first.dev <- c()
# Range must be +1 from start and -1 from end for CDD
for(i in 2:(n-1)) {
first.dev[length(first.dev) + 1] <- ((yVec[(i+1)] - yVec[(i-1)])/(xVec[(i+1)] - xVec[(i-1)]))
}
return (first.dev)
}
secondDev <- function(xVec, yVec) {
n <- length(xVec)
second.dev <- c()
# Range must be +1 from start and -1 from end for second derivative
for(i in 2:(n-1)) {
second.dev[length(second.dev) + 1] <- ((yVec[(i+1)] - 2*yVec[i] + yVec[(i-1)])/((xVec[(i+1)] - xVec[i])^2))
}
return (second.dev)
}
main <- function() {
setwd("/home/neil/devel/school/2021_Fall/Numerical_Computing_Term4/Lab10/")
# Import CSV File
print("Please enter the name of the file to open:")
file <- readline()
rocket.data <- read.xlsx(file)
names(rocket.data) <- c("seconds", "distance")
xVec <- as.vector(rocket.data$seconds)
yVec <- as.vector(rocket.data$distance)
# Plot data
plot(xVec, yVec, ylim=c(0, 200), type="l", col="red", xlab="Time", ylab="Distance", main="Distance Travelled by Rocket")
par(new=TRUE)
# Calc Velocity
newTime <- xVec[2:(length(xVec)-1)]
velocity <- firstDev(xVec, yVec)
plot(newTime, velocity, ylim=c(0, 200), type="l", col="blue", xlab="", ylab="", xaxt="n", yaxt="n")
par(new=TRUE)
# Calc Acceleration
acceleration <- secondDev(xVec, yVec)
plot(newTime, acceleration, ylim=c(0, 200), type="l", col="green", xlab="", ylab="", xaxt="n", yaxt="n")
}
main()
# Library Files
library("openxlsx")
# Functions
firstDev <- function(xVec, yVec) {
n <- length(xVec)
first.dev <- c()
# Range must be +1 from start and -1 from end for CDD
for(i in 2:(n-1)) {
first.dev[length(first.dev) + 1] <- ((yVec[(i+1)] - yVec[(i-1)])/(xVec[(i+1)] - xVec[(i-1)]))
}
return (first.dev)
}
secondDev <- function(xVec, yVec) {
n <- length(xVec)
second.dev <- c()
# Range must be +1 from start and -1 from end for second derivative
for(i in 2:(n-1)) {
second.dev[length(second.dev) + 1] <- ((yVec[(i+1)] - 2*yVec[i] + yVec[(i-1)])/((xVec[(i+1)] - xVec[i])^2))
}
return (second.dev)
}
main <- function() {
setwd("/home/neil/devel/school/2021_Fall/Numerical_Computing_Term4/Lab10/")
# Import CSV File
print("Please enter the name of the file to open:")
file <- readline()
rocket.data <- read.xlsx(file)
names(rocket.data) <- c("seconds", "distance")
xVec <- as.vector(rocket.data$seconds)
yVec <- as.vector(rocket.data$distance)
# Plot data
plot(xVec, yVec, xlim=c(0, 450), ylim=c(0, 200), type="l", col="red", xlab="Time", ylab="Distance", main="Distance Travelled by Rocket")
par(new=TRUE)
# Calc Velocity
newTime <- xVec[2:(length(xVec)-1)]
velocity <- firstDev(xVec, yVec)
plot(newTime, velocity, xlim=c(0, 450), type="l", col="blue", xlab="", ylab="", xaxt="n", yaxt="n")
par(new=TRUE)
# Calc Acceleration
acceleration <- secondDev(xVec, yVec)
plot(newTime, acceleration, xlim=c(0, 450), type="l", col="green", xlab="", ylab="", xaxt="n", yaxt="n")
}
main()
